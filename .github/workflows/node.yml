name: Frontend CI/CD

on:
  push:
    branches: ['feature/github-actions', 'main']
  pull_request:
    branches: ['feature/github-actions', 'main']

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [ '22.x' ]  

    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './package-lock.json'  

    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint with report
      run: |
        mkdir -p reports
        npm run lint -- --format json --output-file reports/eslint-report.json || true
        npm run lint -- --format html --output-file reports/eslint-report.html || true
        # Still run the normal lint command for console output
        npm run lint
      continue-on-error: true

    - name: Run Prettier with report
      run: |
        mkdir -p reports
        npx prettier --check "src/**/*.{js,jsx,ts,tsx,json,css,scss,md}" > reports/prettier-report.txt || true
        # Also generate a JSON report if possible
        npx prettier --list-different --check "src/**/*.{js,jsx,ts,tsx,json,css,scss,md}" --format json > reports/prettier-report.json || true
        # Still run the normal prettier check for console output
        npm run prettier:check
      continue-on-error: true
    
    - name: Build
      run: npm run build
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/target/*.jar
        retention-days: 30
    
    - name: Upload linting reports
      uses: actions/upload-artifact@v4
      with:
        name: linting-reports
        path: reports/
        retention-days: 30